{"version":3,"sources":["helpers/fetch.js","types/types.js","helpers/prepareEvents.js","actions/event.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.jsx","helpers/calendar-messages-es.js","components/ui/Navbar.jsx","components/calendar/CalendarEvent.jsx","actions/ui.js","components/calendar/CalendarModal.jsx","components/ui/AddNewFab.jsx","components/ui/DeleteEventFab.jsx","components/calendar/CalendarScreen.jsx","routes/PrivateRoute.jsx","routes/PublicRoute.jsx","routes/AppRouter.jsx","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","CalendarApp.jsx","index.js"],"names":["baseUrl","process","fetchWithoutToken","resource","data","method","url","console","log","fetch","headers","body","JSON","stringify","fetchWithToken","token","localStorage","getItem","types","prepareEvents","events","map","event","end","moment","toDate","start","eventAdd","type","payload","eventSetActive","eventUpdated","eventDeleted","eventLoaded","login","user","loaded","startLogout","dispatch","removeItem","logout","useForm","initialState","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","useDispatch","loginEmail","loginPassword","formLoginValues","handleLoginInputChange","registerName","registerEmail","registerPassword","registerPasswordCheck","formRegisterValues","handleRegisterInputChange","className","onSubmit","e","email","password","preventDefault","a","res","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","Navbar","useSelector","state","auth","onClick","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowEnd","initialEvent","notes","CalendarModal","isOpenModal","ui","activeEvent","calendar","startDate","setStartDate","endDate","setEndDate","titleValid","setTitleValid","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","id","getState","_id","eventStartAdd","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","localizer","momentLocalizer","locale","CalendarScreen","lastView","setLastView","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onView","view","onSelectSlot","selectable","components","PrivateRoute","isAuthenticated","Component","component","rest","props","to","PublicRoute","AppRouter","loading","exact","path","rootReducer","combineReducers","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cb0ddaa4.chunk.js","sourcesContent":["const baseUrl = process.env.REACT_APP_API_URL;\n\nconst fetchWithoutToken = (resource, data, method = 'GET') => {\n  const url = `${baseUrl}/${resource}`;\n\n  console.log(url);\n\n  if (method === 'GET') {\n    return fetch(url);\n  } else {\n    return fetch(url, {\n      method,\n      headers: {\n        'Content-type': 'application/json',\n      },\n      body: JSON.stringify(data),\n    });\n  }\n};\n\nconst fetchWithToken = (resource, data, method) => {\n  const url = `${baseUrl}/${resource}`;\n  const token = localStorage.getItem('token') || '';\n\n  if (method === 'GET') {\n    return fetch(url, {\n      method,\n      headers: {\n        'x-token': token,\n      },\n    });\n  } else {\n    return fetch(url, {\n      method,\n      headers: {\n        'Content-type': 'application/json',\n        'x-token': token,\n      },\n      body: JSON.stringify(data),\n    });\n  }\n};\n\nexport { fetchWithoutToken, fetchWithToken };\n","export const types = {\n  uiOpenModal: '[UI] Open Modal',\n  uiCloseModal: '[UI] Close Modal',\n\n  eventSetActive: '[Event] Set Active',\n  eventStartAdd: '[Event] Start Add',\n  eventAdd: '[Event] Add',\n  eventUpdated: '[Event] Update',\n  eventDeleted: '[Event] Delete',\n  eventLoaded: '[Event] Loaded',\n  eventClean: '[Event] Clean',\n\n  authLoaded: '[Auth] Loaded',\n  authStartLogin: '[Auth] Start Log In',\n  authLogin: '[Auth] Log In',\n  authStartRegister: '[Auth] Start Register',\n  authRegister: '[Auth] Register',\n  authTokenRefresh: '[Auth] Token Refresh',\n  authLogout: '[Auth] Log Out',\n};\n","import moment from 'moment';\n\nexport const prepareEvents = (events = []) => {\n  return events.map((event) => ({\n    ...event,\n    end: moment(event.end).toDate(),\n    start: moment(event.start).toDate(),\n  }));\n};\n","import Swal from 'sweetalert2';\nimport { fetchWithToken } from '../helpers/fetch';\nimport { prepareEvents } from '../helpers/prepareEvents';\nimport { types } from '../types/types';\n\nexport const eventStartAdd = (event) => {\n  return async (dispatch, getState) => {\n    const { uid, name } = getState().auth;\n\n    try {\n      const res = await fetchWithToken('event', event, 'POST');\n      const body = await res.json();\n\n      if (body.ok) {\n        event.id = body.event.id;\n        event.user = {\n          _id: uid,\n          name,\n        };\n        console.log(event);\n        dispatch(eventAdd(event));\n      }\n    } catch (error) {\n      Swal.fire('Error');\n    }\n  };\n};\n\nconst eventAdd = (event) => ({\n  type: types.eventAdd,\n  payload: event,\n});\n\nexport const eventSetActive = (event) => ({\n  type: types.eventSetActive,\n  payload: event,\n});\n\nexport const eventStartUpdate = (event) => {\n  return async (dispatch) => {\n    try {\n      const res = await fetchWithToken(`event/${event.id}`, event, 'PUT');\n      const body = await res.json();\n\n      if (body.ok) {\n        dispatch(eventUpdated(event));\n        Swal.fire('Success', 'Evento actualizado', 'success');\n      } else {\n        Swal.fire('Error', body.msg, 'error');\n      }\n    } catch (error) {\n      Swal.fire('Error', error, 'error');\n    }\n  };\n};\n\nconst eventUpdated = (event) => ({\n  type: types.eventUpdated,\n  payload: event,\n});\n\nexport const eventStartDelete = () => {\n  return async (dispatch, getState) => {\n    const { activeEvent } = getState().calendar;\n\n    try {\n      const res = await fetchWithToken(`event/${activeEvent.id}`, {}, 'DELETE');\n      const body = await res.json();\n\n      if (body.ok) {\n        dispatch(eventDeleted());\n        Swal.fire('Success', 'Evento eliminado', 'success');\n      } else {\n        Swal.fire('Error', body.msg, 'error');\n      }\n    } catch (error) {\n      Swal.fire('Error', error, 'error');\n    }\n  };\n};\n\nconst eventDeleted = () => ({\n  type: types.eventDeleted,\n});\n\nexport const eventStartLoading = () => {\n  return async (dispatch) => {\n    try {\n      const res = await fetchWithToken('event');\n      const body = await res.json();\n\n      if (body.ok) {\n        const events = prepareEvents(body.events);\n\n        dispatch(eventLoaded(events));\n      }\n    } catch (error) {\n      Swal.fire('Error', error, 'error');\n    }\n  };\n};\n\nconst eventLoaded = (events) => ({\n  type: types.eventLoaded,\n  payload: events,\n});\n\nexport const eventClean = () => ({\n  type: types.eventClean,\n});\n","import { fetchWithoutToken, fetchWithToken } from '../helpers/fetch';\nimport { types } from '../types/types';\n\nimport Swal from 'sweetalert2';\nimport { eventClean } from './event';\n\nexport const startLogin = (email, password) => {\n  return async (dispatch) => {\n    const res = await fetchWithoutToken(\n      'auth/signin',\n      { email, password },\n      'POST'\n    );\n    const body = await res.json();\n\n    if (body.ok) {\n      localStorage.setItem('token', body.token);\n      localStorage.setItem('token-init-date', new Date().getTime());\n\n      dispatch(\n        login({\n          uid: body.uid,\n          name: body.name,\n        })\n      );\n    } else {\n      Swal.fire('Error', body.msg, 'error');\n    }\n  };\n};\n\nconst login = (user) => ({\n  type: types.authLogin,\n  payload: user,\n});\n\nexport const startRegister = (name, email, password) => {\n  return async (dispatch) => {\n    const res = await fetchWithoutToken(\n      'auth/signup',\n      { name, email, password },\n      'POST'\n    );\n    const body = await res.json();\n\n    if (body.ok) {\n      localStorage.setItem('token', body.token);\n      localStorage.setItem('token-init-date', new Date().getTime());\n\n      dispatch(\n        login({\n          uid: body.uid,\n          name: body.name,\n        })\n      );\n    } else {\n      Swal.fire('Error', body.msg, 'error');\n    }\n  };\n};\n\nexport const startLoading = () => {\n  return async (dispatch) => {\n    const res = await fetchWithToken('auth/refresh');\n    const body = await res.json();\n\n    if (body.ok) {\n      localStorage.setItem('token', body.token);\n      localStorage.setItem('token-init-date', new Date().getTime());\n\n      dispatch(\n        login({\n          uid: body.uid,\n          name: body.name,\n        })\n      );\n    } else {\n      dispatch(loaded());\n    }\n  };\n};\n\nconst loaded = () => ({\n  type: types.authLoaded,\n});\n\nexport const startLogout = () => {\n  return (dispatch) => {\n    localStorage.removeItem('token');\n    dispatch(logout());\n    dispatch(eventClean());\n  };\n};\n\nconst logout = () => ({\n  type: types.authLogout,\n});\n","import { useState } from 'react';\n\nexport const useForm = (initialState = {}) => {\n  const [values, setValues] = useState(initialState);\n\n  const reset = () => {\n    setValues(initialState);\n  };\n\n  const handleInputChange = ({ target }) => {\n    setValues({ ...values, [target.name]: target.value });\n  };\n\n  return [values, handleInputChange, reset];\n};\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { startLogin, startRegister } from '../../actions/auth';\nimport { useForm } from '../../hooks/useForm';\nimport './login.css';\n\nexport const LoginScreen = () => {\n  const dispatch = useDispatch();\n\n  const [formLoginValues, handleLoginInputChange] = useForm({\n    loginEmail: 'camilasoto06@gmail.com',\n    loginPassword: 'trompitas',\n  });\n\n  const [formRegisterValues, handleRegisterInputChange] = useForm({\n    registerName: 'Ricardo',\n    registerEmail: 'corteciso@gmail.com',\n    registerPassword: 'bolsos',\n    registerPasswordCheck: 'bolsos',\n  });\n\n  const { loginEmail, loginPassword } = formLoginValues;\n  const {\n    registerName,\n    registerEmail,\n    registerPassword,\n    registerPasswordCheck,\n  } = formRegisterValues;\n\n  const handleLogin = (e) => {\n    e.preventDefault();\n\n    dispatch(startLogin(loginEmail, loginPassword));\n  };\n\n  const handleRegister = (e) => {\n    e.preventDefault();\n\n    dispatch(startRegister(registerName, registerEmail, registerPassword));\n  };\n\n  return (\n    <div className='container login-container'>\n      <div className='row'>\n        <div className='col-md-6 login-form-1'>\n          <h3>Ingreso</h3>\n          <form onSubmit={handleLogin}>\n            <div className='form-group'>\n              <input\n                type='text'\n                className='form-control'\n                placeholder='Correo'\n                name='loginEmail'\n                value={loginEmail}\n                onChange={handleLoginInputChange}\n              />\n            </div>\n            <div className='form-group'>\n              <input\n                type='password'\n                className='form-control'\n                placeholder='Contraseña'\n                name='loginPassword'\n                value={loginPassword}\n                onChange={handleLoginInputChange}\n              />\n            </div>\n            <div className='form-group'>\n              <input type='submit' className='btnSubmit' value='Login' />\n            </div>\n          </form>\n        </div>\n\n        <div className='col-md-6 login-form-2'>\n          <h3>Registro</h3>\n          <form onSubmit={handleRegister}>\n            <div className='form-group'>\n              <input\n                type='text'\n                className='form-control'\n                placeholder='Nombre'\n                name='registerName'\n                value={registerName}\n                onChange={handleRegisterInputChange}\n              />\n            </div>\n            <div className='form-group'>\n              <input\n                type='email'\n                className='form-control'\n                placeholder='Correo'\n                name='registerEmail'\n                value={registerEmail}\n                onChange={handleRegisterInputChange}\n              />\n            </div>\n            <div className='form-group'>\n              <input\n                type='password'\n                className='form-control'\n                placeholder='Contraseña'\n                name='registerPassword'\n                value={registerPassword}\n                onChange={handleRegisterInputChange}\n              />\n            </div>\n\n            <div className='form-group'>\n              <input\n                type='password'\n                className='form-control'\n                placeholder='Repita la contraseña'\n                name='registerPasswordCheck'\n                value={registerPasswordCheck}\n                onChange={handleRegisterInputChange}\n              />\n            </div>\n\n            <div className='form-group'>\n              <input type='submit' className='btnSubmit' value='Crear cuenta' />\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n","export const messages = {\n  allDay: 'Todo el día',\n  previous: '<',\n  next: '>',\n  today: 'Hoy',\n  month: 'Mes',\n  week: 'Semana',\n  day: 'Día',\n  agenda: 'Agenda',\n  date: 'Fecha',\n  time: 'Hora',\n  event: 'Evento',\n  noEventsInRange: 'No hay eventos en este rango',\n  showMore: (total) => `+ Ver más (${total})`,\n};\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { startLogout } from '../../actions/auth';\n\nexport const Navbar = () => {\n  const dispatch = useDispatch();\n  const { name } = useSelector((state) => state.auth);\n\n  const handleLogout = () => {\n    dispatch(startLogout());\n  };\n\n  return (\n    <div className='navbar navbar-dark bg-dark mb-4'>\n      <span className='navbar-brand'>{name}</span>\n      <button className='btn btn-outline-danger' onClick={handleLogout}>\n        <i className='fas fa-sign-out-alt'></i>\n        <span> Salir</span>\n      </button>\n    </div>\n  );\n};\n","import React from 'react';\n\nexport const CalendarEvent = ({ event }) => {\n  const {\n    title,\n    user: { name },\n  } = event;\n\n  return (\n    <div>\n      <strong>{title}</strong>\n      <span> - {name}</span>\n    </div>\n  );\n};\n","import { types } from '../types/types';\n\nexport const uiOpenModal = () => ({\n  type: types.uiOpenModal,\n});\n\nexport const uiCloseModal = () => ({\n  type: types.uiCloseModal,\n});\n","import React, { useEffect, useState } from 'react';\nimport Modal from 'react-modal';\nimport DateTimePicker from 'react-datetime-picker';\nimport moment from 'moment';\nimport Swal from 'sweetalert2';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { uiCloseModal } from '../../actions/ui';\nimport {\n  eventSetActive,\n  eventStartAdd,\n  eventStartUpdate,\n} from '../../actions/event';\n\nconst customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n  },\n};\n\nModal.setAppElement('#root');\n\nconst now = moment().minutes(0).seconds(0).add(1, 'hours');\nconst nowEnd = moment().minutes(0).seconds(0).add(2, 'hours');\n\nconst initialEvent = {\n  title: '',\n  notes: '',\n  start: now.toDate(),\n  end: nowEnd.toDate(),\n};\n\nexport const CalendarModal = () => {\n  const { isOpenModal } = useSelector((state) => state.ui);\n  const { activeEvent } = useSelector((state) => state.calendar);\n  const dispatch = useDispatch();\n\n  const [startDate, setStartDate] = useState(now.toDate());\n  const [endDate, setEndDate] = useState(nowEnd.toDate());\n  const [titleValid, setTitleValid] = useState(true);\n\n  const [formValues, setFormValues] = useState(initialEvent);\n\n  const { title, notes, start, end } = formValues;\n\n  useEffect(() => {\n    if (activeEvent) {\n      setFormValues(activeEvent);\n    } else {\n      setFormValues(initialEvent);\n    }\n  }, [activeEvent, setFormValues]);\n\n  const handleInputChange = ({ target }) => {\n    setFormValues({\n      ...formValues,\n      [target.name]: target.value,\n    });\n  };\n\n  const closeModal = () => {\n    dispatch(uiCloseModal());\n    dispatch(eventSetActive(null));\n  };\n\n  const handleStartChange = (date) => {\n    setStartDate(date);\n    setFormValues({\n      ...formValues,\n      start: date,\n    });\n  };\n\n  const handleEndChange = (date) => {\n    setEndDate(date);\n    setFormValues({\n      ...formValues,\n      end: date,\n    });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const momentStart = moment(start);\n    const momentEnd = moment(end);\n\n    if (momentStart.isSameOrAfter(momentEnd)) {\n      return Swal.fire(\n        'Error',\n        'Fecha final debe ser mayor que la fecha inicial',\n        'error'\n      );\n    }\n\n    if (title.trim().length < 3) {\n      return setTitleValid(false);\n    }\n\n    // TODO: save in database\n    if (activeEvent) {\n      dispatch(eventStartUpdate(formValues));\n    } else {\n      dispatch(eventStartAdd(formValues));\n    }\n\n    setTitleValid(true);\n    closeModal();\n  };\n\n  return (\n    <Modal\n      isOpen={isOpenModal}\n      //   onAfterOpen={afterOpenModal}\n      onRequestClose={closeModal}\n      style={customStyles}\n      closeTimeoutMS={200}\n      className='modal'\n      overlayClassName='modal-fondo'\n    >\n      <h1> {activeEvent ? 'Actualizar evento' : 'Nuevo evento'} </h1>\n      <hr />\n      <form className='container' onSubmit={handleSubmit}>\n        <div className='form-group'>\n          <label>Fecha y hora inicio</label>\n          <DateTimePicker\n            onChange={handleStartChange}\n            value={startDate}\n            className='form-control'\n          />\n        </div>\n\n        <div className='form-group'>\n          <label>Fecha y hora fin</label>\n          <DateTimePicker\n            onChange={handleEndChange}\n            value={endDate}\n            minDate={startDate}\n            className='form-control'\n          />\n        </div>\n\n        <hr />\n        <div className='form-group'>\n          <label>Titulo y notas</label>\n          <input\n            type='text'\n            className={`form-control ${!titleValid && 'is-invalid'}`}\n            placeholder='Título del evento'\n            name='title'\n            autoComplete='off'\n            value={title}\n            onChange={handleInputChange}\n          />\n          <small id='emailHelp' className='form-text text-muted'>\n            Una descripción corta\n          </small>\n        </div>\n\n        <div className='form-group'>\n          <textarea\n            type='text'\n            className='form-control'\n            placeholder='Notas'\n            rows='5'\n            name='notes'\n            value={notes}\n            onChange={handleInputChange}\n          ></textarea>\n          <small id='emailHelp' className='form-text text-muted'>\n            Información adicional\n          </small>\n        </div>\n\n        <button type='submit' className='btn btn-outline-primary btn-block'>\n          <i className='far fa-save'></i>\n          <span> Guardar</span>\n        </button>\n      </form>\n    </Modal>\n  );\n};\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { uiOpenModal } from '../../actions/ui';\n\nexport const AddNewFab = () => {\n  const dispatch = useDispatch();\n\n  const handleAdd = () => {\n    dispatch(uiOpenModal());\n  };\n\n  return (\n    <button className='btn btn-primary fab' onClick={handleAdd}>\n      <i className='fas fa-plus'></i>\n    </button>\n  );\n};\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { eventStartDelete } from '../../actions/event';\n\nexport const DeleteEventFab = () => {\n  const dispatch = useDispatch();\n\n  const handleDelete = () => {\n    dispatch(eventStartDelete());\n  };\n\n  return (\n    <button className='btn btn-danger fab-danger' onClick={handleDelete}>\n      <i className='fas fa-trash'></i>\n    </button>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport moment from 'moment';\n\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport { messages } from '../../helpers/calendar-messages-es';\nimport { Navbar } from '../ui/Navbar';\nimport { CalendarEvent } from './CalendarEvent';\nimport { CalendarModal } from './CalendarModal';\n\nimport 'moment/locale/es';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { uiOpenModal } from '../../actions/ui';\nimport { eventSetActive, eventStartLoading } from '../../actions/event';\nimport { AddNewFab } from '../ui/AddNewFab';\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\n\nconst localizer = momentLocalizer(moment);\nmoment.locale('es');\n\nexport const CalendarScreen = () => {\n  const dispatch = useDispatch();\n  const { events, activeEvent } = useSelector((state) => state.calendar);\n  const { uid } = useSelector((state) => state.auth);\n\n  const [lastView, setLastView] = useState(\n    localStorage.getItem('lastView') || 'month'\n  );\n\n  useEffect(() => {\n    dispatch(eventStartLoading());\n  }, [dispatch]);\n\n  const handleDoubleClick = (event) => {\n    dispatch(uiOpenModal());\n  };\n\n  const handleSelect = (event) => {\n    dispatch(eventSetActive(event));\n  };\n\n  const handleView = (view) => {\n    localStorage.setItem('lastView', view);\n    setLastView(view);\n  };\n\n  const eventStyleGetter = (event, start, end, isSelected) => {\n    const {\n      user: { _id },\n    } = event;\n\n    const style = {\n      backgroundColor: _id === uid ? '#367cf7' : '#465660',\n      borderRadius: 0,\n      opacity: 0.8,\n      display: 'block',\n      color: 'white',\n    };\n\n    return {\n      style,\n    };\n  };\n\n  const handleSelectSlot = (e) => {\n    dispatch(eventSetActive(null));\n  };\n\n  return (\n    <div className='calendar-screen'>\n      <Navbar />\n\n      <Calendar\n        localizer={localizer}\n        events={events}\n        startAccessor='start'\n        endAccessor='end'\n        messages={messages}\n        eventPropGetter={eventStyleGetter}\n        onDoubleClickEvent={handleDoubleClick}\n        onSelectEvent={handleSelect}\n        onView={handleView}\n        view={lastView}\n        onSelectSlot={handleSelectSlot}\n        selectable={true}\n        components={{ event: CalendarEvent }}\n      />\n\n      <AddNewFab />\n      {activeEvent && <DeleteEventFab />}\n\n      <CalendarModal />\n    </div>\n  );\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect, Route } from 'react-router-dom';\n\nexport const PrivateRoute = ({\n  isAuthenticated,\n  component: Component,\n  ...rest\n}) => {\n  return (\n    <Route\n      {...rest}\n      component={(props) =>\n        isAuthenticated ? <Component {...props} /> : <Redirect to='/login' />\n      }\n    />\n  );\n};\n\nPrivateRoute.propTypes = {\n  isAuthenticated: PropTypes.bool.isRequired,\n  component: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect, Route } from 'react-router-dom';\n\nexport const PublicRoute = ({\n  isAuthenticated,\n  component: Component,\n  ...rest\n}) => {\n  return (\n    <Route\n      {...rest}\n      component={(props) =>\n        isAuthenticated ? <Redirect to='/' /> : <Component {...props} />\n      }\n    />\n  );\n};\n\nPublicRoute.propTypes = {\n  isAuthenticated: PropTypes.bool.isRequired,\n  component: PropTypes.func.isRequired,\n};\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { BrowserRouter as Router, Redirect, Switch } from 'react-router-dom';\nimport { startLoading } from '../actions/auth';\nimport { LoginScreen } from '../components/auth/LoginScreen';\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\nimport { PrivateRoute } from './PrivateRoute';\nimport { PublicRoute } from './PublicRoute';\n\nexport const AppRouter = () => {\n  const dispatch = useDispatch();\n  const { loading, uid } = useSelector((state) => state.auth);\n\n  useEffect(() => {\n    dispatch(startLoading());\n  }, [dispatch]);\n\n  if (loading) {\n    return <h3>wait...</h3>;\n  }\n\n  return (\n    <Router>\n      <div>\n        <Switch>\n          <PublicRoute\n            exact\n            path='/login'\n            component={LoginScreen}\n            isAuthenticated={!!uid}\n          />\n\n          <PrivateRoute\n            exact\n            path='/'\n            component={CalendarScreen}\n            isAuthenticated={!!uid}\n          />\n\n          <Redirect to='/' />\n        </Switch>\n      </div>\n    </Router>\n  );\n};\n","import { types } from '../types/types';\n\nconst initialState = {\n  loading: true,\n};\n\nexport const authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.authLogin:\n      return {\n        ...state,\n        ...action.payload,\n        loading: false,\n      };\n    case types.authLoaded:\n      return {\n        ...state,\n        loading: false,\n      };\n    case types.authLogout:\n      return {\n        loading: false,\n      };\n    default:\n      return state;\n  }\n};\n","import { types } from '../types/types';\n\n// {\n//   id: new Date().getTime(),\n//   title: 'Entrevista con Megaterios',\n//   start: moment().toDate(),\n//   end: moment().add(2, 'hours').toDate(),\n//   bgcolor: '#fafafa',\n//   notes: 'Practicar Node y Python',\n//   user: {\n//     _id: '123',\n//     name: 'Fredy',\n//   },\n// },\n\nconst initialState = {\n  events: [],\n  activeEvent: null,\n};\n\nexport const calendarReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.eventSetActive:\n      return {\n        ...state,\n        activeEvent: action.payload,\n      };\n    case types.eventAdd:\n      return {\n        ...state,\n        events: [...state.events, action.payload],\n      };\n    case types.eventUpdated:\n      return {\n        ...state,\n        events: state.events.map((event) =>\n          event.id === action.payload.id ? action.payload : event\n        ),\n      };\n    case types.eventDeleted:\n      return {\n        ...state,\n        events: state.events.filter(\n          (event) => event.id !== state.activeEvent.id\n        ),\n        activeEvent: null,\n      };\n    case types.eventLoaded:\n      return {\n        ...state,\n        events: [...action.payload],\n      };\n    case types.eventClean:\n      return initialState;\n    default:\n      return state;\n  }\n};\n","import { types } from '../types/types';\n\nconst initialState = {\n  isOpenModal: false,\n};\n\nexport const uiReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.uiOpenModal:\n      return {\n        ...state,\n        isOpenModal: true,\n      };\n    case types.uiCloseModal:\n      return initialState;\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport { authReducer } from './authReducer';\nimport { calendarReducer } from './calendarReducer';\nimport { uiReducer } from './uiReducer';\n\nexport const rootReducer = combineReducers({\n  ui: uiReducer,\n  calendar: calendarReducer,\n  auth: authReducer,\n});\n","import { applyMiddleware, compose, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport { rootReducer } from '../reducers/rootReducer';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport const store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk))\n);\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { AppRouter } from './routes/AppRouter';\nimport { store } from './store/store';\n\nexport const CalendarApp = () => {\n  return (\n    <Provider store={store}>\n      <AppRouter />\n    </Provider>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\n\nimport './styles.css';\n\nReactDOM.render(<CalendarApp />, document.getElementById('root'));\n"],"sourceRoot":""}